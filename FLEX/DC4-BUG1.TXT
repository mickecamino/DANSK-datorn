** DC-BUG1 . VERSION 4.1

** SYSTEM OVERSKRIFT
*
GSTR2 FCC "       DC DATA SYSTEM VERSION 4.2",0

** OUTPUT CHARACTER TO TERMINAL.
*
OUTCH PSHS CC,A,B,X,Y,U
 ORCC #%01010000
 PSHS A
 LDA #30
 STA CLSBY1
 PULS A
 TST ECHO
 BEQ OUTRTS
 TST USABYT
 BNE OUTUSA
 JMP [OUTADR] JMP INDR.
OUTCHR CMPA #$1F
 BLS CONTROL
 ANDA #$7F
 ORA GRABYT GRAFIK
OUT2 LDX CURADR
 STA 0,X+
 JSR SCROL
OUTRTS PULS CC,A,B,X,Y,U,PC

** CONVERT TIL US CHR
*
OUTUSA LDX #USATAB
TSTUSA CMPA 0,X+
 BEQ KEYOKK
 INX
 CMPX #USAEND
 BNE TSTUSA
 JMP [OUTADR]
KEYOKK LDA 0,X
 BRA OUT2

USATAB FCB $5B,$F8
 FCB $5C,$F9
 FCB $5D,$FA
 FCB $7B,$FB
 FCB $7C,$FC
 FCB $7D,$FD
USAEND EQU *

CONTROL TFR A,B
 ASLB
 LDX #COMTAB
 JMP [B,X]

COMTAB FDB OUTEND CHAR. 00  ** NULL
 FDB BCURUP   """   01  **  BUMP CURSOR UP
 FDB BCURDW   """   02  **  BUMP CURSOR DOWN
 FDB HOMDWN   """   03  **  HOME DOWN
 FDB BCURLF   """   04  **  BUMP CURSOR LEFT
 FDB CUROFF   """   05  **  CURSOR OFF
 FDB ERSELN   """   06  **  ERASE TO END OF LINE
 FDB BELL     """   07  **  BELL
 FDB BACKSP   """   08  **  BACKSPACE
 FDB BCURRT   """   09
 FDB LF       """   0A
 FDB SETXY    """   0B
 FDB FORMFD   """   0C
 FDB CR       """   0D
 FDB SCRLUP   """   0E
 FDB SCRLDW   """   0F
 FDB HOMET    """   10
 FDB SETKAR   """   11        SWAP CHARAKTERS[T
 FDB OUTEND   """   12
 FDB OUTEND   """   13        NOFUNK
 FDB PSCBO1   """   14
 FDB CURON    """   15
 FDB ERSESK   """   16
 FDB OUTEND   """   17
 FDB CANCEL   """   18
 FDB INLINE   """   19
 FDB DELLIN   """   1A
 FDB OUTEND   """   1B
 FDB GRUPB    """   1C
 FDB GRUPC    """   1D
 FDB GRUPD    """   1E
 FDB GRUPE    """   1F

** ( 00 ) NULL

OUTEND BRA OUTRTS

** ( 01 ) BUMP CURSOR UP

BCURUP LDD CURADR
 SUBD #LINLNG
 CMPD CURSTA
 BLO BCUPRT
 STD CURADR
 JSR SETCUR
BCUPRT JMP OUTRTS

** ( 02 ) BUMP CURSOR DOWN

BCURDW LDB #LINLNG
 LDX CURADR
 ABX
 CMPX CUREND
 BHS BCDWEN
 STX CURADR
 JSR SETCUR
BCDWEN JMP OUTRTS

** ( 03 ) HOME DOWN

HOMDWN LDD CUREND
 SUBD #LINLNG
 CLR LINCON
 STD CURADR
 JSR SETCUR
 JMP OUTRTS

** ( 04 ) BUMP CURSOR LEFT

BCURLF LDA LINCON
 BEQ BCLFEND
BCLF1 LDX CURADR
 DEX
 CMPX CURSTA
 BLO BCLFEND
 DEC LINCON
 STX CURADR
 JSR SETCUR
BCLFEND JMP OUTRTS

** ( 05 ) CURSOR OFF

CUROFF BSR CUROF1
 JMP OUTRTS
CUROF1 LDB #10
 LDA #$6A
 STB CRTADR
 STA CRTREG
 RTS

** ( 06 ) ERASE TO END OF LINE

ERSELN JSR CLRLIN
 JMP OUTRTS

** ( 07) BELL   ???????????????

BELL EQU *          BIT 4 POVER ON
 LDA VIA
 ANDA #%11111101    BIT 1  BELL
 STA VIA
 LDX #10000
BL1 DEX
 BNE BL1
 LDA VIA
 ORA #%00000010
 STA VIA
 JMP OUTRTS

** ( 08 ) BACKSPACE

BACKSP LDA LINCON
 BEQ BACKRTS
BACKS LDX CURADR
 DEX
 CMPX CURSTA
 BEQ BACKRTS
 DEC LINCON
 STX CURADR
 LDA #$20
 STA 0,X
 JSR SETCUR
BACKRTS JMP OUTRTS

** ( 09 ) BUMP CURSOR RIGHT

BCURRT LDA LINCON
 INCA
 CMPA #LINLNG
 BEQ BCRTRT
BCRT1 LDX CURADR
 INX
 CMPX CUREND
 BEQ BCRTRT
 INC LINCON
 STX CURADR
 JSR SETCUR
BCRTRT JMP OUTRTS

** ( 0A ) LINE FEED

LF LDB #LINLNG
 LDX CURADR
 ABX
 JSR SCRO1
 TST AUTBYT
 BEQ LFRTS
 LDX BNROUT
 STX INVEC
LFRTS JMP OUTRTS

** ( 0B ) SET CURSOR POSITION (X,Y)

SETXY LDX #SETXY1
 STX OUTADR
 JMP OUTRTS
SETXY1 STA WRKSPC
 LDX #SETXY2
 STX OUTADR
 JMP OUTRTS
SETXY2 CMPA #23 LINEANTAL M] IKKE >23
 BHI SETXY5
SETXY3 LDB #LINLNG
 MUL
 ADDD #CRTRAM
 TFR D,X
 LDB WRKSPC
 CMPB #LINLNG-1
 BHI SETXY5
SETXY4 STB LINCON
 ABX
 STX CURADR
 JSR SETCUR
SETXY5 JMP RESTORE

** ( 0C ) FORM FEED

FORMFD LDX CURSTA
 STX CURADR
 JSR CLRDEL
 CLR LINCON
 JSR SETCUR
 JMP OUTRTS

** ( 0D ) CARRIAGE RETURN

CR LDD CURADR
 SUBD LINWRK
 STD CURADR
 CLR LINCON
 JSR SETCUR
 JMP OUTRTS

** ( 0E ) SCROOLL UP

SCRLUP JSR SCRO2
 JMP OUTRTS


** ( 0F ) SCROOLL DOWN

SCRLDW BSR CRDW0
 JMP OUTRTS
CRDW0 LDD CUREND
 TFR D,Y
 SUBD #LINLNG
 TFR D,X
 CMPX CURSTA
 BEQ CRDW2
CRDW1 LDA ,-X
 STA ,-Y
 CMPX CURSTA
 BNE CRDW1
CRDW2 CLRB
 JSR CLLIN
 RTS

** ( 10 ) HOME UP

HOMET LDX CURSTA
 STX CURADR
 CLR LINCON
 JSR SETCUR
 JMP OUTRTS

** ( 11 ) SWAP CHARAKTERS[T

SETKAR COM USABYT
 JMP OUTRTS

** ( 12 ) NO FUNKTION

** ( 13 ) NO FUNKTION

** ( 14 ) SCROLPROT X LINE OF BOTTOM

PSCBO1 LDX #PSCBOX
 STX OUTADR
 JMP OUTRTS
PSCBOX LDX #PSCBO2
 STX OUTADR
 STA WRKSPC
 JMP OUTRTS
PSCBO2 LDB WRKSPC
 CMPB #'E
 BEQ CLKONL
 CMPB #'S
 BEQ PRSTAT
 CMPB #'C
 BEQ PCLST
 CMPB #'T
 BEQ PSCTO1
 CMPB #'B
 LBNE RESTORE
 CMPA #12
 BHI PSCEN
 LDB #LINLNG
 MUL
 STD WRKSPC
 LDD #RAMEND
 SUBD WRKSPC
 STD CUREND
 LDD CURSTA
 BRA PCREN
PSCTO1 CMPA #12
 BHI PSCEN
 LDB #LINLNG
 MUL
 ADDD #CRTRAM
 STD CURSTA
PCREN STD CURADR
 CLR LINCON
 JSR SETCUR
PSCEN JMP RESTORE

PRSTAT CMPA #'T
 BNE PSCEN
 JSR SETL25         SET OUTPUT TIL LINE 25
 BRA PSCEN

PCLST CMPA #'L
 BNE PSCEN
 JSR CLRL25         CLEAR OUTPUT LINE 25
 BRA PSCEN

CLKONL CMPA #'N
 BEQ CLONLN
 CMPA #'F
 BNE EXTCRT
 JSR NORTC          SET CLOCK OFF
 BRA PSCEN

CLONLN LDX CURADR   SET CLOCK ONN P] CURSUR POS.
 STX RTCLOC
 JSR SETRTC
 BRA PSCEN

EXTCRT CMPA #'X
 BNE PSCEN
 JSR TSTR12
 BRA PSCEN
 LDB #12
 LDX #$0FE0         STARTADR P] ROUTINE
 JMP RDPROM

** ( 15 ) CURSOR ON

CURON BSR CURON1
 JMP OUTRTS
CURON1 LDB #10
 LDA LSTCUR
 STB CRTADR
 STA CRTREG
 RTS

** ( 16 ) ERASE TO END OF FRAME

ERSESK LDX CURADR
 JSR CLRDEL
 JMP OUTRTS

** ( 17 ) NO FUNKTION

** ( 18 ) CANCEL

CANCEL LDD CURADR
 SUBD LINWRK
 STD CURADR
 CLR LINCON
 JSR SETCUR
 JMP OUTRTS


** ( 19 ) INSERT LINE, UP

INLINE JSR STCUR GEM CURSOR + LINECOUNT + CURSTA + CUREND
 LDD CURADR
 SUBD LINWRK
 CMPD CURSTA
 BEQ INL1
 ADDD #LINLNG
 STD CUREND
 JSR SCRO2
INL1 JSR LDCUR HENT CURSOR
 JMP OUTRTS

** ( 1A ) DELETE LINE, UP

DELLIN JSR STCUR
 LDD CURADR HENT CURSORADR.
 SUBD LINWRK
 STD CURSTA S[T START P] SCROL
 TFR D,X
 ADDD #LINLNG
 CMPD CUREND
 BNE DELL2
 LDA #$20
DELL1 STA 0,X+
 CMPX CUREND
 BNE DELL1
 BRA DELL3
DELL2 JSR SCRO2 SCROLL OP
DELL3 JSR LDCUR HENT CURSOR TILBAGE
 JMP OUTRTS

** ( 1B ) ESCAPE

** ( 1C ) GROUP B CONTROL

GRUPB LDX #BCOM
 STX OUTADR
 STA CONTST
 JMP OUTRTS
BCOM LDX #COMT1C
NCOM CMPA ,X+
 BEQ JCM1C
 LEAX 2,X
 CMPX #ENT1C
 BNE NCOM
 STA CONTST+1
 JMP RESTORE
JCM1C JMP [,X]

COMT1C FCB $01
 FDB IN1CH
 FCB $02
 FDB IN1CH
 FCB $04
 FDB IN1CH
 FCB $07
 FDB SVERCU SET VERTICAL CURSOR X
 FCB $08
 FDB DELCRT DELETE CHARACTER RIGHT
 FCB $09
 FDB IN1CH
 FCB $0B
 FDB SETCYX SET CURSOR Y,X
 FCB $11
 FDB CLRGRA CLEAR GRAFIK
 FCB $17
 FDB SHORCU SET HORISONTAL CURSOR X
 FCB $18
 FDB INCHRT INSERT CHARACTER RIGHT
 FCB $19
 FDB INLNDW INSERT LINE DOWN
 FCB $1A
 FDB DELNDW DELETE LINE DOWN
 FCB $1B
 FDB IN1CH
ENT1C EQU *

** SET VERTICAL CURSOR X

SVERCU LDX #SVER1
 STX OUTADR
 JMP OUTRTS
SVER1 CMPA #23
 BLS SVER2
 LDA #23
SVER2 LDB #LINLNG
 MUL
 ADDD #CRTRAM
 ADDD LINWRK
 STD CURADR
 JSR SETCUR
 JMP RESTORE

** DELETE CHARACTER RIGHT

DELCRT LDY CURADR
 TFR Y,X
 INX
 LDB LINCON
DELCT2 LDA 0,X+
 STA 0,Y+
 INCB
 CMPB #LINLNG-1
 BNE DELCT2
 LDA #$20
 STA ,Y
 JMP RESTORE

** SET CURSOR Y,X

SETCYX LDX #SETYX1
 STX OUTADR
 JMP OUTRTS

SETYX1 STA WRKSPC
 LDX #SETYX2
 STX OUTADR
 JMP OUTRTS

SETYX2 CMPA #LINLNG
 BHI SETYX9
SETYX3 STA LINCON
 LDB #LINLNG
 LDA WRKSPC
 CMPA #LINANT
 BHI SETYX9
SETYX8 MUL
 ADDD #CRTRAM
 ADDD LINWRK
 STD CURADR
 JSR SETCUR
SETYX9 JMP RESTORE

** CLEAR GRAFIK

CLRGRA CLR GRABYT
 JMP RESTORE

** SET HORISONTAL CURSOR X

SHORCU LDX #SHOR1
 STX OUTADR
 JMP OUTRTS
SHOR1 PSHS A
 LDD CURADR
 SUBD LINWRK
 TFR D,X
 PULS B
 STB LINCON
 ABX
 STX CURADR
 JSR SETCUR
 JMP RESTORE

** INSERT CHARACTER RIGHT X

INCHRT LDX #INCHR1
 STX OUTADR
 JMP OUTRTS
INCHR1 LDX CURADR
 STX WRKSPC
 PSHS A
 LDA LINCON
 CMPA #LINLNG-1
 BNE IICH1
 PULS A
 STA 0,X
 BRA INCH7
IICH1 TFR X,D
 SUBD LINWRK
 ADDD #LINLNG-1
 TFR D,Y
 TFR D,X
 LEAY 1,Y
INCHR2 LDA ,-X
 STA ,-Y
 CMPX WRKSPC
 BNE INCHR2
 LDA ,X
 STA ,Y
 PULS A
 STA ,X
INCH7 JMP RESTORE

** INSERT LINE DOWN

INLNDW JSR STCUR
 LDX #OUTCHR
 STX OUTADR
 LDD CURADR
 SUBD LINWRK
 STD CURSTA
 JSR CRDW0
 JSR LDCUR
 JMP OUTRTS

** DELETE LINE DOWN

DELNDW JSR STCUR
 LDX #OUTCHR
 STX OUTADR
 LDD CURADR
 SUBD LINWRK
 ADDD #LINLNG
 STD CUREND
 JSR CRDW0
 JSR LDCUR
 JMP OUTRTS

** ( 1D ) GROUP C CONTROL

GRUPC LDX #CCOM
 STX OUTADR
 STA CONTST
 JMP OUTRTS
CCOM LDX #COMT1D
TCOM CMPA ,X+
 BEQ JCM1D
 LEAX 2,X
 CMPX #ENT1D
 BNE TCOM
 STA CONTST+1
 JMP RESTORE
JCM1D JMP [,X]

COMT1D FCB $03
 FDB IN4CH
 FCB $04
 FDB IN4CH
 FCB $05
 FDB IN4CH
 FCB $0C
 FDB IN1CH
 FCB $0D
 FDB IN1CH
 FCB $0E
 FDB IN1CH
 FCB $0F
 FDB IN1CH
 FCB $10
 FDB IN1CH
 FCB $11
 FDB IN2CH
 FCB $12
 FDB IN2CH
 FCB $13
 FDB IN2CH
 FCB $14
 FDB IN2CH
 FCB $15
 FDB IN2CH
 FCB $16
 FDB SETGRA GRAFIK
 FCB $17
 FDB IN2CH
 FCB $18
 FDB IN1CH
 FCB $1B
 FDB IN1CH
 FCB $1C
 FDB IN2CH
 FCB $1D
 FDB IN1CH
ENT1D EQU *

** SET GRAFIK

SETGRA LDA #$80
 STA GRABYT
 JMP RESTORE

** ( 1E ) OPTION BIT CONTROL

GRUPD LDX #DCOM
 STX OUTADR
 STA CONTST
 JMP OUTRTS
DCOM LDX #COMT1E
RCOM CMPA ,X+
 BEQ JCM1E
 LEAX 2,X
 CMPX #ENT1E
 BNE RCOM
 STA CONTST+1
 JMP RESTORE
JCM1E JMP [,X]

COMT1E FCB $03
 FDB SBLCUR SET BLINKING CURSOR
 FCB $04
 FDB SBKCUR SET BLOCK CURSOR
 FCB $13
 FDB SNOBCU SET NONBLINKING CURSOR
 FCB $14
 FDB SUNCUR SET UNDERLINE CURSOR
ENT1E EQU *

** SET BLINKING CURSOR

SBLCUR LDA LSTCUR
 ANDA #%00011111
 ORA #%01100000
 STA LSTCUR
 LDB #$0A
 STB CRTADR
 STA CRTREG
 JMP RESTORE

** SET BLOCK CURSOR

SBKCUR LDA LSTCUR
 ANDA #%11100000
 ORA #%00000000
 STA LSTCUR
 LDB #$0A
 STB CRTADR
 STA CRTREG
 JMP RESTORE

** SET NON BLINKING CURSOR

SNOBCU LDA LSTCUR
 ANDA #%00011111
 ORA #%00000000
 STA LSTCUR
 LDB #$0A
 STB CRTADR
 STA CRTREG
 JMP RESTORE

** SET UNDERLINE CURSOR

SUNCUR LDA LSTCUR
 ANDA #%11100000
 ORA #%00001000
 STA LSTCUR
 LDB #$0A
 STB CRTADR
 STA CRTREG
 JMP RESTORE

** ( 1F ) GROUP E CONTROL

GRUPE LDX #ECOM
 STX OUTADR
 STA CONTST
 JMP OUTRTS
ECOM LDX #COMT1F
SCOM CMPA ,X+
 BEQ JCM1F
 LEAX 2,X
 CMPX #ENT1F
 BNE SCOM
 STA CONTST+1
 BRA RESTORE
JCM1F JMP [,X]

COMT1F FCB $01
 FDB PRESET
 FCB $04
 FDB IN1CH
 FCB $05
 FDB IN1CH
 FCB $06
 FDB STOCUR STORE CURSOR POS
 FCB $07
 FDB LODCUR RECALL STORED CURSOR POS
 FCB $08
 FDB BSNODS BACKSPACE NON-DESTR.
 FCB $0A
 FDB IN1CH
 FCB $0B
 FDB IN2CH
ENT1F EQU *

** PROGRAMMABLE RESET

PRESET BSR CRTRES
 BRA RESTORE
CRTRES JSR CRTINT
 LDX #CRTRAM
 STX CURADR
 STX CURSTA
 CLR LINCON
 LDX #RAMEND
 STX CUREND
 RTS

** STORE CURSOR POSITION

STOCUR JSR STCUR1
 BRA RESTORE

** RECALL STORED CURSOR POSITION

LODCUR JSR LDCUR1
 BRA RESTORE

** BACKSPACE NON-DESTR.

BSNODS NOP
 BRA RESTORE

** ROUTINE TIL AF FANGE IKKE BENYTTE CHARACTER

IN4CH INC KARCON
 INC KARCON
IN2CH INC KARCON
IN1CH INC KARCON
 STA CONTST+1
 LDX #DEFCAR
 STX OUTADR
 JMP OUTRTS

DEFCAR DEC KARCON
 BEQ RESTORE
 JMP OUTRTS

RESTORE LDX #OUTCHR
 STX OUTADR
 JMP OUTRTS

** IKKE I FUNTION

NOFUNC JMP OUTRTS


** SCROL  X=CURADR ON ENTRY

SCROL INC LINCON T[L KARAKTERT[LLER EN OP
 LDB LINCON HENT DEN
 CMPB #LINLNG KARAKTERT[LLER = SIDSTE KARAKTER ??
 BNE SCRO1  NEJ
 CLR LINCON JA, NUL#IL KARAKTERT[LLER
SCRO1 CMPX CUREND X=END OF SCREEN ???
 BLO NOSCRO NEJ INGEN SCROL
 TFR X,D
 SUBD #LINLNG
 CMPD CUREND
 BHI NOSCRO
 STD CURADR

SCRO2 PSHS D
 STS WRKSPC
 LDD CURSTA
 TFR D,X
 ADDD #LINLNG
 TFR D,U
CMOVE LDD 0,U++
 STD 0,X++
 PULU D,Y,S
 STD 0,X++
 STY 0,X++
 STS 0,X++
 CMPU CUREND
 BNE CMOVE
 LDS WRKSPC
 PULS D
CMOV1 LDA 0,X
 CMPA #$E2
 BEQ CMOV2
 CMPA #$EF
 BEQ CMOV2
 LDA #$20
CMOV2 STA 0,X+
 CMPX CUREND
 BNE CMOV1
 BSR SETCUR
 RTS

NOSCRO STX CURADR
 BSR SETCUR
 RTS

SETCUR LDB #14
 LDA CURADR
 STB CRTADR
 STA CRTREG
 INCB
 LDA CURADR+1
 STB CRTADR
 STA CRTREG
 RTS

CLEAR LDX CURSTA
CLRDEL LDA #$20
SPC STA 0,X+
 CMPX CUREND
 BNE SPC
 RTS

CLRLIN LDB LINCON
 LDX CURADR
CLLIN LDA #$20
CLR8 STA 0,X+
 INCB
 CMPB #LINLNG
 BNE CLR8
 RTS

STCUR LDD CURSTA  GEM START P] SCROL
 STD CURTM1
 LDD CUREND GEM END P] SCROL
 STD CURTM2
STCUR1 LDA LINCON GEM LINET[LLER
 STA CURTM3
 LDD CURADR GEM CURSOR ADR
 STD CURTM4
 RTS

LDCUR LDD CURTM1
 STD CURSTA
 LDD CURTM2
 STD CUREND
LDCUR1 LDA CURTM3
 STA LINCON
 LDD CURTM4
 STD CURADR
 BSR SETCUR
 RTS

SETFUN LDA LSTCUR
 ANDA #%11100000
 ORA #%00000000
 LDB #$0A
 STB CRTADR
 STA CRTREG
 RTS

CLRFUN LDA LSTCUR
 LDB #$0A
 STB CRTADR
 STA CRTREG
 RTS

** PRINT CRLF + STRENG
*
PSTRNG BSR PCRLF PRINT CR/LF
 BRA PDATA PRINT STRING POINTED TO BY IX

** PCRLF
*
PCRLF PSHS X SAVE IX
 LDX #MSG2 POINT TO MSG CR/LF
 BSR PDATA
 PULS X,PC RESTORE IX

** PRINT STRENG END P] 4
*
PDATA PSHS A
PDATA1 LDA ,X+ GET 1st CHAR. TO PRINT
 CMPA #4 IS IT EOT?
 BEQ PDAEND IF NOT EOT PRINT IT
 JSR OUTCH
 BRA PDATA1
PDAEND PULS A,PC

** PRINT STRENG END P] 00
*
PDATA0 PSHS D,X,Y
PDAT1 LDA 0,X+
 BEQ PDATEN
 JSR OUTCH
 BRA PDAT1
PDATEN PULS D,X,Y,PC


* OUT4(OUTPUTS THE CONTENTS OF THE
* "X" REGISTER AS 4 HEX CHARACTERS.
* ALL REGISTERS ARE PRESERVED.

OUT4HT PSHS A,B,X
 TFR X,D
 BSR OUTHL OUTPUT HEX LEFT
 TFR B,A PUT LS BYTE INTO A-ACC.
 BSR OUTHL
 PULS A,B,X,PC
OUTHL EQU *
OUT2H PSHS A SAVE "A" ON STACK
 LSRA CONVERT UPPER HEX NIBBLE TO ASCII
 LSRA
 LSRA
 LSRA
 BSR XASCII PRINT HEX NIBBLE AS ASCII
 LDA 0,S CONVERT LOWER HEX NIBBLE TO ASCII
 ANDA #$0F STRIP LEFT NIBBLE
 BRA XAC
XASCII PSHS A
XAC ADDA #$30 ASCII ADJ
 CMPA #$39 IS IT < OR = "9" ?
 BLE OUTC IF LESS, OUTPUT IT
 ADDA #7 IF > MAKE ASCII LETTER
OUTC JSR OUTCH OUTPUT CHAR
 PULS A,PC

** OUTPUT STRENG A-REG FROM CURSOR TIL MARGEN
*
PGSTR PSHS B,X
 LDX CURADR
 LDB LINCON
PGST1 STA B,X
 INCB
 CMPB #LINLNG
 BNE PGST1
 BSR PCRLF
 PULS B,X,PC

** OUTPUT GRAFIK + 1 SPACE
*
GOUTCH PSHS A
 PSHS A
 LDA #$80
 STA GRABYT
 PULS A
 JSR OUTCH
 LDA #$20
 JSR OUTCH
 CLR GRABYT
 PULS A
 RTS

POUT PSHS A,B
 TST FIRST
 BEQ PR0
 BSR FPRMAR
PR0 CMPA #$7F
 BHI PRTNCH
PR2 JSR $CCE7
 CMPA #$0A
 BNE PTRRTS
 BSR PRMAR
PTRRTS LDA #30
 STA CLSBY1
 PULS A,B,PC

FPRMAR CLR FIRST
PRMAR PSHS A        PRINT LEFT MARGEN
 TST PRTMAR
 BEQ PROU1
 LDA PRTMAR
 ORA #$80
PMOUT JSR $CCE7     S[T I BUFFER
PROU1 PULS A,PC

PRTNCH PSHS X
 LDX #USATAB+1
PRSLA CMPA 0,X++
 BEQ CHFUN
 CMPX #USAEND+1
 BNE PRSLA
PRSL1 PULS X
 BRA PR2
CHFUN LEAX -3,X
 LDA 0,X
 BRA PRSL1

** INIT ACIA
*
INTACA LDX #$E008
 LDA #$03
 STA 0,X
 LDA #$15
 STA 0,X
 TST 0,X
 LDA #$FF
 STA ECHO
 RTS

** INIT CRT CONTROLLER
*
CRTINT PSHS CC
 ORCC #%01010000
 CLRB
 LDX #CRTTAB
INTCRT STB CRTADR
 LDA ,X+
 STA CRTREG
 INCB
 CMPB #$10
 BNE INTCRT

** INIT BAUDRATE
*
 LDA #$C0
 STA VIA+$B
 LDA #BAUDBT
 STA VIA+6
 LDA #$00
 STA VIA+5
 PULS CC,PC

*
INCHNO PSHS X
 LDX CPORT
INCNO LDA 0,X
 ANDA #$01
 BEQ INCNO
 LDA 1,X
 PULS X,PC


 FCB $01
